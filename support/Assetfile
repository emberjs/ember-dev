Encoding.default_external = "UTF-8" if defined?(Encoding)

require 'ember-dev'
require "ember-dev/rakep/filters"

output "dist"

input "packages" do
  match "*/tests/**/*.js" do
    minispade :rewrite_requires => true, :string => true, :module_id_generator => proc { |input|
      id = input.path.dup
      id.sub!(/\.js$/, '')
      id.sub!(/\/main$/, '')
      id.sub!('/tests', '/~tests')
      id
    }

    concat "#{EmberDev.config.dasherized_name}-tests.js"
  end

  match  "#{EmberDev.config.dasherized_name}-tests.js" do
    filter JSHintRC
  end
end

input "packages" do
  match "*/lib/**/*.js" do
    minispade :rewrite_requires => true, :string => true, :module_id_generator => proc { |input|
      id = input.path.dup
      id.sub!('/lib/', '/')
      id.sub!(/\.js$/, '')
      id.sub!(/\/main$/, '')
      id
    }

    concat "ember-spade.js"

    # MEGAHAX
    if defined?(ember_spade_postprocess)
      instance_eval ember_spade_postprocess
    end
  end
end

input "packages" do
  match "*/lib/**/main.js" do
    neuter(
      :additional_dependencies => proc { |input|
        Dir.glob(File.join(File.dirname(input.fullpath),'**','*.js'))
      },
      :path_transform => proc { |path, input|
        package, path = path.split('/', 2)
        current_package = input.path.split('/', 2)[0]
        current_package == package && path ? File.join(package, "lib", "#{path}.js") : nil
      },
      :closure_wrap => true
    ) do |filename|
      File.join("modules/", filename.gsub('/lib/main.js', '.js'))
    end
  end
end

# vim: filetype=ruby
